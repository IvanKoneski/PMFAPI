/*
 * Personal Finance Management API
 *
 * Personal Finance Management API allows analyze of a client's spending patterns against pre-defined budgets over time 
 *
 * OpenAPI spec version: v1
 * Contact: aleksandar.milosevic@asseco-see.rs
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
//using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using APIPMF.Attributes;

using Microsoft.AspNetCore.Authorization;
using APIPMF.Models;

namespace APIPMF.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CategoriesApiController : ControllerBase
    { 
        /// <summary>
        /// Get the list of PFM categories
        /// </summary>
        /// <remarks>Gets the list of root PEM categories if parent-id not provided</remarks>
        /// <param name="parentId">Filter by parent-id</param>
        /// <response code="200">OK</response>
        /// <response code="400">Your request was not constructed properly. Response contains the list of validation errors for each invalid element of your request. To learn more see general guidance on [validation](common-getstarted.html#validation).</response>
        /// <response code="0">Besides specific status codes above, other standard http [status codes](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html) can be returned for each request. To learn more see general guidance on [error handling](common-getstarted.html#error-handling)</response>
        [HttpGet]
        [Route("/v1/pfm/categories")]
        [ValidateModelState]
        public virtual IActionResult CategoriesGetList([FromQuery]string parentId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
             return StatusCode(200, default(CategoryList));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ValidationProblem));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ValidationProblem));
            string exampleJson = null;
            exampleJson = "{\n  \"items\" : [ {\n    \"code\" : \"A\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Misc Expenses\"\n  }, {\n    \"code\" : \"B\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Auto & Transport\"\n  }, {\n    \"code\" : \"C\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Bills & Utilities\"\n  }, {\n    \"code\" : \"D\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Education\"\n  }, {\n    \"code\" : \"E\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Entertainment\"\n  }, {\n    \"code\" : \"F\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Fees & Charges\"\n  }, {\n    \"code\" : \"G\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Financial\"\n  }, {\n    \"code\" : \"E\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Food & Dining\"\n  }, {\n    \"code\" : \"H\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Gifts & Donations\"\n  }, {\n    \"code\" : \"I\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Health & Fitness\"\n  }, {\n    \"code\" : \"J\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Home\"\n  }, {\n    \"code\" : \"K\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Income\"\n  }, {\n    \"code\" : \"L\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Kids\"\n  }, {\n    \"code\" : \"M\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Loans\"\n  }, {\n    \"code\" : \"N\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Personal Care\"\n  }, {\n    \"code\" : \"O\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Pets\"\n  }, {\n    \"code\" : \"P\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Shopping\"\n  }, {\n    \"code\" : \"R\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Taxes\"\n  }, {\n    \"code\" : \"S\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Transfer\"\n  }, {\n    \"code\" : \"T\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Travel\"\n  }, {\n    \"code\" : \"Z\",\n    \"parent-code\" : \"\",\n    \"name\" : \"Split\"\n  }, {\n    \"code\" : \"0\",\n    \"parent-code\" : \"A\",\n    \"name\" : \"Other\"\n  }, {\n    \"code\" : \"1\",\n    \"parent-code\" : \"B\",\n    \"name\" : \"Other\"\n  }, {\n    \"code\" : \"2\",\n    \"parent-code\" : \"B\",\n    \"name\" : \"Auto Insurance\"\n  }, {\n    \"code\" : 3,\n    \"parent-code\" : \"B\",\n    \"name\" : \"Auto Leasing\"\n  }, {\n    \"code\" : 4,\n    \"parent-code\" : \"B\",\n    \"name\" : \"Gas & Fuel\"\n  }, {\n    \"code\" : 5,\n    \"parent-code\" : \"B\",\n    \"name\" : \"Parking\"\n  }, {\n    \"code\" : 7,\n    \"parent-code\" : \"B\",\n    \"name\" : \"Service & Parts\"\n  }, {\n    \"code\" : 9,\n    \"parent-code\" : \"C\",\n    \"name\" : \"Home Phone\"\n  }, {\n    \"code\" : 10,\n    \"parent-code\" : \"C\",\n    \"name\" : \"Internet\"\n  }, {\n    \"code\" : 11,\n    \"parent-code\" : \"C\",\n    \"name\" : \"Mobile Phone\"\n  }, {\n    \"code\" : 12,\n    \"parent-code\" : \"C\",\n    \"name\" : \"Television\"\n  }, {\n    \"code\" : 13,\n    \"parent-code\" : \"C\",\n    \"name\" : \"Utilities\"\n  }, {\n    \"code\" : 15,\n    \"parent-code\" : \"D\",\n    \"name\" : \"Books & Supplies\"\n  }, {\n    \"code\" : 17,\n    \"parent-code\" : \"D\",\n    \"name\" : \"Tuition\"\n  }, {\n    \"code\" : 20,\n    \"parent-code\" : \"E\",\n    \"name\" : \"Arts\"\n  }, {\n    \"code\" : 21,\n    \"parent-code\" : \"E\",\n    \"name\" : \"Movies & DVDs\"\n  }, {\n    \"code\" : 22,\n    \"parent-code\" : \"E\",\n    \"name\" : \"Music\"\n  }, {\n    \"code\" : 23,\n    \"parent-code\" : \"E\",\n    \"name\" : \"Newspapers & Magazines\"\n  }, {\n    \"code\" : 25,\n    \"parent-code\" : \"F\",\n    \"name\" : \"ATM Fee\"\n  }, {\n    \"code\" : 26,\n    \"parent-code\" : \"F\",\n    \"name\" : \"Bank Fee\"\n  }, {\n    \"code\" : 28,\n    \"parent-code\" : \"F\",\n    \"name\" : \"Late Fee\"\n  }, {\n    \"code\" : 33,\n    \"parent-code\" : \"G\",\n    \"name\" : \"Life Insurance\"\n  }, {\n    \"code\" : 38,\n    \"parent-code\" : \"E\",\n    \"name\" : \"Groceries\"\n  }, {\n    \"code\" : 39,\n    \"parent-code\" : \"E\",\n    \"name\" : \"Restaurants\"\n  }, {\n    \"code\" : 41,\n    \"parent-code\" : \"H\",\n    \"name\" : \"Charity\"\n  }, {\n    \"code\" : 42,\n    \"parent-code\" : \"H\",\n    \"name\" : \"Gift\"\n  }, {\n    \"code\" : 44,\n    \"parent-code\" : \"I\",\n    \"name\" : \"Dentist\"\n  }, {\n    \"code\" : 45,\n    \"parent-code\" : \"I\",\n    \"name\" : \"Doctor\"\n  }, {\n    \"code\" : 46,\n    \"parent-code\" : \"I\",\n    \"name\" : \"Eyecare\"\n  }, {\n    \"code\" : 47,\n    \"parent-code\" : \"I\",\n    \"name\" : \"Gym\"\n  }, {\n    \"code\" : 48,\n    \"parent-code\" : \"I\",\n    \"name\" : \"Health Insurance\"\n  }, {\n    \"code\" : 49,\n    \"parent-code\" : \"I\",\n    \"name\" : \"Pharmacy\"\n  }, {\n    \"code\" : 50,\n    \"parent-code\" : \"I\",\n    \"name\" : \"Sports\"\n  }, {\n    \"code\" : 53,\n    \"parent-code\" : \"J\",\n    \"name\" : \"Home Improvement\"\n  }, {\n    \"code\" : 54,\n    \"parent-code\" : \"J\",\n    \"name\" : \"Home Insurance\"\n  }, {\n    \"code\" : 55,\n    \"parent-code\" : \"J\",\n    \"name\" : \"Home Services\"\n  }, {\n    \"code\" : 56,\n    \"parent-code\" : \"J\",\n    \"name\" : \"Home Supplies\"\n  }, {\n    \"code\" : 58,\n    \"parent-code\" : \"J\",\n    \"name\" : \"Mortgage & Rent\"\n  }, {\n    \"code\" : 59,\n    \"parent-code\" : \"K\",\n    \"name\" : \"Other\"\n  }, {\n    \"code\" : 60,\n    \"parent-code\" : \"K\",\n    \"name\" : \"Bonus\"\n  }, {\n    \"code\" : 61,\n    \"parent-code\" : \"K\",\n    \"name\" : \"Interest Income\"\n  }, {\n    \"code\" : 62,\n    \"parent-code\" : \"K\",\n    \"name\" : \"Paycheck\"\n  }, {\n    \"code\" : 64,\n    \"parent-code\" : \"K\",\n    \"name\" : \"Rental Income\"\n  }, {\n    \"code\" : 67,\n    \"parent-code\" : \"L\",\n    \"name\" : \"Allowance\"\n  }, {\n    \"code\" : 68,\n    \"parent-code\" : \"L\",\n    \"name\" : \"Baby Supplies\"\n  }, {\n    \"code\" : 71,\n    \"parent-code\" : \"L\",\n    \"name\" : \"Kids Activities\"\n  }, {\n    \"code\" : 72,\n    \"parent-code\" : \"L\",\n    \"name\" : \"Toys\"\n  }, {\n    \"code\" : 74,\n    \"parent-code\" : \"M\",\n    \"name\" : \"Loan Fees and Charges\"\n  }, {\n    \"code\" : 77,\n    \"parent-code\" : \"M\",\n    \"name\" : \"Loan Payment\"\n  }, {\n    \"code\" : 80,\n    \"parent-code\" : \"N\",\n    \"name\" : \"Hair\"\n  }, {\n    \"code\" : 82,\n    \"parent-code\" : \"N\",\n    \"name\" : \"Spa & Massage\"\n  }, {\n    \"code\" : 83,\n    \"parent-code\" : \"O\",\n    \"name\" : \"Other\"\n  }, {\n    \"code\" : 84,\n    \"parent-code\" : \"O\",\n    \"name\" : \"Pet Food & Supplies\"\n  }, {\n    \"code\" : 85,\n    \"parent-code\" : \"O\",\n    \"name\" : \"Pet Grooming\"\n  }, {\n    \"code\" : 86,\n    \"parent-code\" : \"O\",\n    \"name\" : \"Veterinary\"\n  }, {\n    \"code\" : 88,\n    \"parent-code\" : \"P\",\n    \"name\" : \"Books\"\n  }, {\n    \"code\" : 89,\n    \"parent-code\" : \"P\",\n    \"name\" : \"Clothing\"\n  }, {\n    \"code\" : 90,\n    \"parent-code\" : \"P\",\n    \"name\" : \"Electronics & Software\"\n  }, {\n    \"code\" : 92,\n    \"parent-code\" : \"P\",\n    \"name\" : \"Sporting Goods\"\n  }, {\n    \"code\" : 96,\n    \"parent-code\" : \"R\",\n    \"name\" : \"Property Tax\"\n  }, {\n    \"code\" : 98,\n    \"parent-code\" : \"R\",\n    \"name\" : \"Income Tax\"\n  }, {\n    \"code\" : 100,\n    \"parent-code\" : \"S\",\n    \"name\" : \"Credit Card Payment\"\n  }, {\n    \"code\" : 103,\n    \"parent-code\" : \"T\",\n    \"name\" : \"Air Travel\"\n  }, {\n    \"code\" : 104,\n    \"parent-code\" : \"T\",\n    \"name\" : \"Hotel\"\n  }, {\n    \"code\" : 105,\n    \"parent-code\" : \"T\",\n    \"name\" : \"Rental Car & Taxi\"\n  }, {\n    \"code\" : 106,\n    \"parent-code\" : \"T\",\n    \"name\" : \"Vacation\"\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<CategoryList>(exampleJson)
                        : default(CategoryList);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Import categories
        /// </summary>
        /// <remarks>Imports categories</remarks>
        /// <param name="body">Command to import categories</param>
        /// <response code="200">Categories imported</response>
        /// <response code="400">Your request was not constructed properly. Response contains the list of validation errors for each invalid element of your request. To learn more see general guidance on [validation](common-getstarted.html#validation).</response>
        /// <response code="440">Your request was well constructed but it could not be processed due to business policy.</response>
        /// <response code="0">Besides specific status codes above, other standard http [status codes](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html) can be returned for each request. To learn more see general guidance on [error handling](common-getstarted.html#error-handling)</response>
        [HttpPost]
        [Route("/v1/pfm/categories/import")]
        [ValidateModelState]
        public virtual IActionResult CategoryImprot([FromBody]CategoryCsv body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ValidationProblem));

            //TODO: Uncomment the next line to return response 440 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(440, default(BusinessProblem));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ValidationProblem));

            throw new NotImplementedException();
        }
    }
}
